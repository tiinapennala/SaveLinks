/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2017-04-17 15:23:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import model.Link;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 @SuppressWarnings("unchecked") 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.jsp", Long.valueOf(1491659680701L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Link");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"http://ajax.aspnetcdn.com/ajax/jquery.validate/1.15.0/jquery.validate.min.js\"></script>\r\n");
      out.write("<title>Blink</title>\r\n");
      out.write("<style>\r\n");
      out.write("label{\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("    width:120px;\r\n");
      out.write("    text-align:right;\r\n");
      out.write("    vertical-align:top;\r\n");
      out.write("}\r\n");
      out.write("label.error {\r\n");
      out.write("\twidth:80px;\t\r\n");
      out.write("    color: red; \r\n");
      out.write("    text-align:left;  \r\n");
      out.write("}\r\n");
      out.write(".header_icon{\r\n");
      out.write("\theight:50px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<img src=\"images/home.png\" class=\"header_icon\" title=\"All Links\" onclick=\"document.location='mainview.jsp'\">\r\n");
      out.write("<img src=\"images/user.png\" class=\"header_icon\" title=\"Shared\" onclick=\"document.location='boards.jsp'\">\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<fieldset id=\"customerDetails\">\r\n");
      out.write("<legend>New User</legend>\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"Servlet_UusiAsiakas\" method=\"post\" id=\"newForm\">\r\n");
      out.write("\t\t<label>Firstname </label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"fistname\" id=\"fistname\"><br>\r\n");
      out.write("\t\t<label>Lastname</label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"lastname\" id=\"lastname\"><br>\r\n");
      out.write("\t\t<label>Email</label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"email\" id=\"email\"><br>\r\n");
      out.write("\t\t<label>Username</label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"username\" id=\"username\"><br>\r\n");
      out.write("\t\t<label>Password</label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"password\" id=\"password\"><br>\r\n");
      out.write("\t\t<label>Password again</label>\r\n");
      out.write("\t\t<input type=\"text\" name=\"password2\" id=\"password2\"><br>\r\n");
      out.write("\t\t<input type=\"button\" value=\"Register\" id=\"RegisterBtn\"><br>\r\n");
      out.write("\t</form>\r\n");
      out.write("</fieldset>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#customerDetails\").css({\r\n");
      out.write("\t\t\t\"width\": \"500px\", \r\n");
      out.write("\t\t\t\"border-radius\": \"15px\"\r\n");
      out.write("\t\t});\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#newForm\").validate({\t\t\t\t\t\t\r\n");
      out.write("\t\t\trules: {\r\n");
      out.write("\t\t\t\tfistname:  {\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tminlength: 2\t\t\t\t\r\n");
      out.write("\t\t\t\t},\t\r\n");
      out.write("\t\t\t\tlastname:  {\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tminlength: 2\t\t\t\t\r\n");
      out.write("\t\t\t\t},\t\t\t\r\n");
      out.write("\t\t\t\temail:  {\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\temail: true\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tusername:  {\t\t\t\t\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tminlength: 2\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword:  {\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tminlength: 5\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword2:  {\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tminlength: 5,\r\n");
      out.write("\t\t\t\t\tequalTo: salasana\r\n");
      out.write("\t\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tmessages: {\r\n");
      out.write("\t\t\t\tfistname: {     \r\n");
      out.write("\t\t\t\t\trequired: \"Details missing\",\r\n");
      out.write("\t\t\t\t\tminlength: \"Name is too short\"\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlastname: {\r\n");
      out.write("\t\t\t\t\trequired: \"Details missing\",\r\n");
      out.write("\t\t\t\t\tminlength: \"Name is too short\"\r\n");
      out.write("\t\t\t\t},\t\r\n");
      out.write("\t\t\t\temail: {\r\n");
      out.write("\t\t\t\t\trequired: \"Details missing\",\r\n");
      out.write("\t\t\t\t\temail: \"Not correct form\"\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tusername:  {\t\t\t\t\r\n");
      out.write("\t\t\t\t\tminlength: \"Too short\"\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword: {\r\n");
      out.write("\t\t\t\t\trequired: \"Details missing\",\r\n");
      out.write("\t\t\t\t\tminlength: \"Password is too short\"\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpassword2: {\r\n");
      out.write("\t\t\t\t\trequired: \"Details missing\",\r\n");
      out.write("\t\t\t\t\tminlength: \"Password is too short\",\r\n");
      out.write("\t\t\t\t\tequalTo: \"Doesn't equal with password\"\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//\"},\" olisiko pitänyt olla näin?\r\n");
      out.write("\t\t});   \r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
